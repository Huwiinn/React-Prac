{"ast":null,"code":"var _jsxFileName = \"/Users/hwuiinnpark/Desktop/sparta/\\u1102\\u1162\\u1107\\u1162\\u110F\\u1162\\u11B74\\u1100\\u1175/\\u1102\\u1162\\u1107\\u1162\\u110F\\u1162\\u11B7 \\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/todo/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction User(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [props.user.age, \"\\uC0B4 - \", props.user.name, /*#__PURE__*/_jsxDEV(CustomButton, {\n        color: \"pink\",\n        onClick: () => {\n          props.handleDelete(props.user.id);\n        },\n        children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = User;\nfunction CustomButton(props) {\n  const {\n    color,\n    onClick,\n    children\n  } = props;\n  if (color) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: color,\n        color: \"white\",\n        padding: 10,\n        borderRadius: 5\n      },\n      onClick: onClick,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_c2 = CustomButton;\nfunction App() {\n  _s();\n  // const vegetables = ['감자','고구마','오이','가지','콩나물'];\n  const [users, setUsers] = useState([{\n    id: 1,\n    age: 30,\n    name: \"송중기\"\n  }, {\n    id: 2,\n    age: 24,\n    name: \"송강\"\n  }, {\n    id: 3,\n    age: 10,\n    name: \"김유정\"\n  }, {\n    id: 4,\n    age: 15,\n    name: \"구교환\"\n  }]);\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const addUserHandler = () => {\n    const newUser = {\n      id: users.length + 1,\n      age: age,\n      name,\n      name\n    };\n    setUsers([...users, newUser]);\n  };\n  const deleteUserHandler = id => {\n    const newUserList = users.filter(user => user.id !== id); // filter()는 true값만 반환함.\n    console.log(id);\n    setUsers(newUserList);\n  }; // 매개변수 id가 어떤 것을 의미하는지? user.id !== id는 어떤 것을 비교하는건가?\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [users.map(user => {\n      if (user.age <= 25) {\n        return /*#__PURE__*/_jsxDEV(User, {\n          user: user,\n          age: user.age,\n          handleDelete: deleteUserHandler\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 18\n        }, this);\n      } else {\n        return null;\n      }\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: e => {\n          setName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: age,\n        placeholder: \"\\uB098\\uC774\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: e => {\n          setAge(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        color: \"green\",\n        onClick: addUserHandler,\n        children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n//\n_s(App, \"mY0l3Q+S2ufKQDYAReOabCYkUMU=\");\n_c3 = App;\nfunction Card(_ref) {\n  let {\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Card;\nexport default App;\n\n// {name} = {name : 'Max', age : 28} console.log(name) // Max ⭐️ 객체 구조분해 할당 예시 ⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"CustomButton\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"Card\");","map":{"version":3,"names":["React","useState","User","props","user","age","name","handleDelete","id","CustomButton","color","onClick","children","backgroundColor","padding","borderRadius","App","users","setUsers","setName","setAge","addUserHandler","newUser","length","deleteUserHandler","newUserList","filter","console","log","map","e","target","value","Card"],"sources":["/Users/hwuiinnpark/Desktop/sparta/내배캠4기/내배캠 리액트/todo/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n\n\nfunction User(props) {\n  return (\n    <div>\n      <div className=\"card-container\">\n        {props.user.age}살 - {props.user.name}\n        <CustomButton color=\"pink\" onClick={() => {props.handleDelete(props.user.id)}}>삭제하기</CustomButton>\n      </div>\n    </div>\n  );\n}\n\nfunction CustomButton(props) {\n  const {color, onClick, children} = props\n  if (color) {\n    return (\n    <button style={{backgroundColor : color, color:\"white\", padding:10, borderRadius : 5}}\n    onClick={onClick}>{children}</button>\n    )\n  }\n  return (\n      <button onClick={onClick}>{children}</button>\n  );\n} \n\nfunction App() {\n  // const vegetables = ['감자','고구마','오이','가지','콩나물'];\n  const [users, setUsers] = useState([\n    { id : 1, age : 30, name : \"송중기\"},\n    { id : 2, age : 24, name : \"송강\"},\n    { id : 3, age : 10, name : \"김유정\"},\n    { id : 4, age : 15, name : \"구교환\"},\n  ]);\n  const [name, setName] = useState(\"\")\n  const [age, setAge] = useState(\"\")\n\n  const addUserHandler = () => {\n    const newUser = {\n      id : users.length + 1,\n      age : age,\n      name, name,\n    }\n    setUsers([...users, newUser])\n  }\n\n  const deleteUserHandler = (id) => {\n    const newUserList = users.filter(user => user.id !== id); // filter()는 true값만 반환함.\n    console.log(id)\n    setUsers(newUserList)\n  } // 매개변수 id가 어떤 것을 의미하는지? user.id !== id는 어떤 것을 비교하는건가?\n\n  return (\n    <div className=\"container\">\n      {/* <Card name=\"감자\"/>\n      <Card name=\"고구마\"/>\n      <Card name=\"오이\"/>\n      <Card name=\"가지\"/>\n      <Card name=\"콩나물\"/> */}\n\n      {/* {vegetables.map((vegetableName) => {\n        return (\n          <div key={vegetableName}>{vegetableName}</div>\n        )\n      })} */}\n\n      {users.map((user) => {\n        if(user.age <= 25) {       \n          return <User user={user} key={user.id} age={user.age} handleDelete={deleteUserHandler}/>;\n        } else {\n          return null;\n        }\n        \n      })}\n      <div className='input-container'>\n        <input\n          value={name}\n          placeholder=\"이름을 입력해주세요.\"\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        ></input>\n        <input\n          value={age}\n          placeholder=\"나이를 입력해주세요.\"\n          onChange={(e) => {\n            setAge(e.target.value);\n          }}\n        ></input>\n        <CustomButton color=\"green\" onClick={addUserHandler}>추가하기</CustomButton>\n        \n      </div>\n    </div>\n  ); \n}\n\n//\n\nfunction Card({name}) {\n\n  return (\n    <div className='card-container'>\n      <div>\n        {name}\n        {/* {name}으로 부모에 있는 현재 컴포넌트의 name값을 가져옴. << Obj로 값이 표현되기 때문에 가능.   */}\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n\n// {name} = {name : 'Max', age : 28} console.log(name) // Max ⭐️ 객체 구조분해 할당 예시 ⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}