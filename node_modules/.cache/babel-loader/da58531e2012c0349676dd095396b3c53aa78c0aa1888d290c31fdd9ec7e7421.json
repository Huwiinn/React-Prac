{"ast":null,"code":"var _jsxFileName = \"/Users/hwuiinnpark/Desktop/sparta/\\u1102\\u1162\\u1107\\u1162\\u110F\\u1162\\u11B74\\u1100\\u1175/\\u1102\\u1162\\u1107\\u1162\\u110F\\u1162\\u11B7 \\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/todo/src/App.jsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const vegetables = ['감자', '고구마', '오이', '가지', '콩나물'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: vegetables.map(vegetableName => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: vegetableName\n      }, vegetableName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n//\n_c = App;\nfunction Card(_ref) {\n  let {\n    name\n  } = _ref;\n  // const A = <p>{props.name}</p>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Card;\nexport default App;\n\n// {name} = {name : 'Max', age : 28} console.log(name) // Max ⭐️ 객체 구조분해 할당 예시 ⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"names":["React","useState","App","vegetables","map","vegetableName","Card","name"],"sources":["/Users/hwuiinnpark/Desktop/sparta/내배캠4기/내배캠 리액트/todo/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const vegetables = ['감자','고구마','오이','가지','콩나물'];\n  return(\n    <div className='container'>\n      {/* <Card name=\"감자\"/>\n      <Card name=\"고구마\"/>\n      <Card name=\"오이\"/>\n      <Card name=\"가지\"/>\n      <Card name=\"콩나물\"/> */}\n      {vegetables.map((vegetableName) => {\n        return (\n          <div key={vegetableName}>{vegetableName}</div>\n        )\n      })}\n    </div>\n  ) \n}\n\n//\n\nfunction Card({name}) {\n  // const A = <p>{props.name}</p>\n\n  return (\n    <div className='card-container'>\n      <div>\n        {name}\n        {/* {name}으로 부모에 있는 현재 컴포넌트의 name값을 가져옴. << Obj로 값이 표현되기 때문에 가능.   */}\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n\n// {name} = {name : 'Max', age : 28} console.log(name) // Max ⭐️ 객체 구조분해 할당 예시 ⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EACb,MAAMC,UAAU,GAAG,CAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,CAAC;EAC/C,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,UAMvBA,UAAU,CAACC,GAAG,CAAEC,aAAa,IAAK;MACjC,oBACE;QAAA,UAA0BA;MAAa,GAA7BA,aAAa;QAAA;QAAA;QAAA;MAAA,QAAuB;IAElD,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;;AAEA;AAAA,KAlBSH,GAAG;AAoBZ,SAASI,IAAI,OAAS;EAAA,IAAR;IAACC;EAAI,CAAC;EAClB;;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,uBAC7B;MAAA,UACGA;IAAI;MAAA;MAAA;MAAA;IAAA;EAED;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,MAXQD,IAAI;AAab,eAAeJ,GAAG;;AAElB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}